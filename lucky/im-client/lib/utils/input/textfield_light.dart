import 'dart:ui';

import 'package:jxim_client/utils/color.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

class TextFieldLight extends TextField {
  const TextFieldLight({
    Key? key,
    FocusNode? focusNode,
    TextEditingController? controller,
    TextDirection? textDirection,
    TextAlignVertical? textAlignVertical,
    TextCapitalization textCapitalization = TextCapitalization.none,
    TextInputType? keyboardType,
    TextInputAction? textInputAction,
    TextAlign textAlign = TextAlign.start,
    TextStyle? style,
    StrutStyle? strutStyle,
    Color? cursorColor,
    Brightness? keyboardAppearance = txtBrightness,
    bool readOnly = false,
    bool? showCursor,
    ToolbarOptions? toolbarOptions,
    bool autofocus = false,
    String obscuringCharacter = 'â€¢',
    bool obscureText = false,
    bool autocorrect = true,
    SmartDashesType? smartDashesType,
    SmartQuotesType? smartQuotesType,
    bool enableSuggestions = true,
    int maxLines = 1,
    int? minLines,
    bool expands = false,
    int? maxLength,
    InputDecoration? decoration,
    ValueChanged<String>? onChanged,
    ValueChanged<String>? onSubmitted,
    bool maxLengthEnforced = true,
    MaxLengthEnforcement? maxLengthEnforcement,
    VoidCallback? onEditingComplete,
    AppPrivateCommandCallback? onAppPrivateCommand,
    List<TextInputFormatter>? inputFormatters,
    bool? enabled,
    double cursorWidth = 2.0,
    double? cursorHeight,
    Radius? cursorRadius,
    BoxHeightStyle selectionHeightStyle = BoxHeightStyle.tight,
    BoxWidthStyle selectionWidthStyle = BoxWidthStyle.tight,
    EdgeInsets scrollPadding = const EdgeInsets.all(20.0),
    DragStartBehavior dragStartBehavior = DragStartBehavior.start,
    bool enableInteractiveSelection = true,
    TextSelectionControls? selectionControls,
    GestureTapCallback? onTap,
    MouseCursor? mouseCursor,
    InputCounterWidgetBuilder? buildCounter,
    ScrollController? scrollController,
    ScrollPhysics? scrollPhysics,
    Iterable<String>? autofillHints,
    String? restorationId,
    bool enableIMEPersonalizedLearning = true,
  }) : super(
            key: key,
            focusNode: focusNode,
            controller: controller,
            textDirection: textDirection,
            textAlignVertical: textAlignVertical,
            textCapitalization: textCapitalization,
            keyboardType: keyboardType,
            textInputAction: textInputAction,
            textAlign: textAlign,
            style: style,
            strutStyle: strutStyle,
            cursorColor: cursorColor,
            keyboardAppearance: keyboardAppearance,
            readOnly: readOnly,
            showCursor: showCursor,
            toolbarOptions: toolbarOptions,
            autofocus: autofocus,
            obscuringCharacter: obscuringCharacter,
            obscureText: obscureText,
            autocorrect: autocorrect,
            smartDashesType: smartDashesType,
            smartQuotesType: smartQuotesType,
            enableSuggestions: enableSuggestions,
            maxLines: maxLines,
            minLines: minLines,
            expands: expands,
            maxLength: maxLength,
            decoration: decoration,
            onChanged: onChanged,
            onSubmitted: onSubmitted,
            maxLengthEnforcement: maxLengthEnforcement,
            onEditingComplete: onEditingComplete,
            onAppPrivateCommand: onAppPrivateCommand,
            inputFormatters: inputFormatters,
            enabled: enabled,
            cursorWidth: cursorWidth,
            cursorHeight: cursorHeight,
            cursorRadius: cursorRadius,
            selectionHeightStyle: selectionHeightStyle,
            selectionWidthStyle: selectionWidthStyle,
            scrollPadding: scrollPadding,
            dragStartBehavior: dragStartBehavior,
            enableInteractiveSelection: enableInteractiveSelection,
            selectionControls: selectionControls,
            onTap: onTap,
            mouseCursor: mouseCursor,
            buildCounter: buildCounter,
            scrollController: scrollController,
            scrollPhysics: scrollPhysics,
            autofillHints: autofillHints,
            restorationId: restorationId,
            enableIMEPersonalizedLearning: enableIMEPersonalizedLearning);
}
